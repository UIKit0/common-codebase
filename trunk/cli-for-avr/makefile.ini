# CLI initial files

ARCH   = AVR
CPU    = atmega16
F_CPU  = 8000000

PROJECT      := cli
PROJECT_DIR  := $(subst \,/,$(TOP_DIR))

# all sub-directorys to make
SUB_DIRS  := cpu/$(ARCH) common cli system
# the final image dirctory
IMAGE_DIR := image

CROSS_COMPILE = avr-

CC		= $(CROSS_COMPILE)gcc
CXX		= $(CROSS_COMPILE)g++
LD		= $(CROSS_COMPILE)ld
AR		= $(CROSS_COMPILE)ar
AS		= $(CROSS_COMPILE)as
RANLIB	= $(CROSS_COMPILE)ranlib
NM		= $(CROSS_COMPILE)nm
OBJCOPY	= $(CROSS_COMPILE)objcopy
OBJDUMP	= $(CROSS_COMPILE)objdump
STRIP	= $(CROSS_COMPILE)strip
SIZE	= $(CROSS_COMPILE)size

RM		= rm -f
MKDIR	= mkdir -p
MAKE    = make

CPU_OPTS =  -g -mmcu=$(CPU) -Wall -Wpointer-arith -ansi                      \
			-Wstrict-prototypes -Winline -Wundef -Os -std=gnu99              \
			-funsigned-char -funsigned-bitfields -fpack-struct -fshort-enums

ALL_INC	= 	$(PROJECT_DIR)/cli/inc                                           \
			$(PROJECT_DIR)/system/inc                                        \
			$(PROJECT_DIR)/common/h                                          \
			$(PROJECT_DIR)/common/inc                                        \
			$(PROJECT_DIR)/cpu/$(ARCH)/$(CPU)/inc                            \
			$(PROJECT_DIR)/cpu/$(ARCH)/common/inc

MACRO_ORTS = -D__CPU_$(ARCH)__ -DF_CPU=$(F_CPU)UL

AFLAGS  = 	$(CPU_OPTS) -gstabs -x assembler-with-cpp                        \
			$(addprefix -I,$(ALL_INC)) $(MACRO_ORTS)
CFLAGS	= 	$(CPU_OPTS) $(addprefix -I,$(ALL_INC)) $(MACRO_ORTS)

vpath %.c ./src
vpath %.S ./src
vpath %.h ./inc
vpath %.d ./o
vpath %.o ./o

# auto create the depend file
%.d: %.c
	-@$(MKDIR) o
	$(CC) -M $(AFLAGS) $< > ./o/$@

%.d: %.S
	-@$(MKDIR) o
	$(CC) -M $(AFLAGS) $< > ./o/$@

# told compiler to use these rule to compile source files
%.o : %.c
	$(CC) -c $(CFLAGS) $< -o ./o/$@

%.o : %.S
	$(CC) -c $(AFLAGS) $< -o ./o/$@
